<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.renkaen.cat_hospital.mapper.InStocksMapper">
    <!--1对多联表查inStocks和inbound-->
    <resultMap id="InStocksJoinInbound" type="com.renkaen.cat_hospital.bean.DTO.InStocksJoinInboundDTO" autoMapping="true">
        <result property="inStocksId" column="in_stock_id"/>
        <collection property="inbound" column="in_stock_id" select="joinInbound" autoMapping="true" />
    </resultMap>
    <select id="selectInStocksJoinInboundByType" resultMap="InStocksJoinInbound">
        select *
        from inStocks_table
        where `type` = #{type}
    </select>
    <select id="joinInbound" resultType="com.renkaen.cat_hospital.bean.DO.Inbound">
        select *
        from inbound_table
        where in_stock_id = #{in_stock_id}
    </select>

    <!--根据权限id获取权限信息-->
    <select id="selectUserById" resultType="com.renkaen.cat_hospital.bean.DO.InStocks">
        select *
        from inStocks_table
        where in_stock_id = #{id};
    </select>
<!--    获取所有的inStocks-->
    <select id="selectInStocksAll" resultType="com.renkaen.cat_hospital.bean.DO.InStocks">
        select *
        from inStocks_table;
    </select>

<!--    根据id更新instocks-->
    <update id="updateInStocksById" parameterType="com.renkaen.cat_hospital.bean.DO.InStocks">
        update inStocks_table
        set `type` = ifnull( #{inStocks.type} , `type` ),
            `name` = ifnull( #{inStocks.name} , `name` ),
            `key` = ifnull( #{inStocks.key} , `key` ),
            consumed = ifnull( #{inStocks.consumed} , consumed ),
            sell_price = ifnull( #{inStocks.sellPrice} , sell_price ),
            brand = ifnull( #{inStocks.brand} ,brand),
            amount = ifnull( #{inStocks.amount} ,amount)
        where in_stock_id = #{id}
    </update>

    <insert id="insertInStocks" useGeneratedKeys="true" keyProperty="inStockId" >
        insert into inStocks_table (`type`,`name`,`key`,consumed,sell_price,brand,amount)
        values ( #{type}, #{name}, #{key}, #{consumed}, #{sellPrice}, #{brand}, #{amount})
    </insert>

    <delete id="deleteInStocksById">
        delete
        from inStocks_table
        where in_stock_id = #{id}
    </delete>

</mapper>